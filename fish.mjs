// Telegram @ivavva1

import fetch from 'node-fetch'


const config = {
  access_token: "", // Access Token ตัวอย่าง. "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9........"  
  delay: 1 // วินาที 
}

const headers = { 
  "accept": "*/*",
  "accept-language": "en,th;q=0.9",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
  "authorization": config.access_token,
  "content-type": "application/json",
  "sec-ch-ua": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"96\", \"Google Chrome\";v=\"96\"",
  "sec-ch-ua-mobile": "?0",
  "sec-ch-ua-platform": "\"Windows\"",
  "sec-fetch-dest": "empty",
  "sec-fetch-mode": "cors",
  "sec-fetch-site": "same-site",
  "Referer": "https://play.fishingtown.io/",
  "Referrer-Policy": "strict-origin-when-cross-origin",
}

const api = {
  metadata: "https://api.fishingtown.io/api/v1/fishing_town/me/metadata",
  begin_fishing: "https://api.fishingtown.io/api/v1/fishing_town/me/begin_fishing",
  end_fishing: "https://api.fishingtown.io/api/v1/fishing_town/me/end_fishing",
}


const args = process.argv.slice(2);

function sleep(seconds) {
  return new Promise(resolve => setTimeout(resolve, seconds * 1000))
}

const begin_fishing = async (rodId) => { 

  fetch(api.begin_fishing, {
    "headers": headers,
    "body":  `{\"rodId\":\"${rodId}}\"}`, 
    "method": "POST"
  }).then(res => Promise.all([res.status, res.json()])).then(([status, data]) => { 
  
    if(status === 200) {
      
      console.log(`Fishing target ==> ${data.fish.rarity}`)
    }

  })
}

const end_fishing = async () => { 

  fetch(api.end_fishing, {
    "headers": headers,
    "body": null,
    "method": "POST"
  }).then(res => Promise.all([res.status, res.json()])).then(([status, data]) => { 
  
    if(status === 200) {
      if(data.fish) {

        console.log(`|`)
        console.log(`|__ Fish ID : ${data.fish.id}`)
        console.log(`|__ Fish Price : ${data.fish.sellPrice}`)
        console.log("\n")
 
      }else if(data.item){

        console.log(`|`)
        console.log(`|__ Catch Junk T^T `)
        console.log("\n")

      }
    }
  })
}

const PlayerInfo = async () => {
  fetch(api.metadata, {
    "headers": headers,
    "body": null,
    "method": "GET"
  }).then(res => Promise.all([res.status, res.json()])).then(([status, data]) => { 

    if(status === 200) {

      console.log(`\n`)
      console.log(`#  Player Info`)
      console.log(`   Name : ${data.displayName}`)
      console.log(`   Address : ${data.address}`)
      console.log(`   Level : ${data.level}`)
      console.log(`\n`)

    }
  })
}

const start_bot = async (rodId , durability = 8) => {
  for (let i = 0; i < durability; i++) {
    await begin_fishing(rodId)
    await sleep(config.delay)
    await end_fishing()
    await sleep(1)
  }

}
PlayerInfo()
start_bot(args[0] , args[1])
